/*!
* @license PreloadJS
* Visit http://createjs.com/ for documentation, updates and examples.
*
* Copyright (c) 2011-2015 gskinner.com, inc.
*
* Distributed under the terms of the MIT license.
* http://www.opensource.org/licenses/mit-license.html
*
* This notice shall be included in all copies or substantial portions of the Software.
*/
this.createjs = this.createjs || {}, (function () {
  const a = createjs.PreloadJS = createjs.PreloadJS || {}; a.version = '0.6.2', a.buildDate = 'Thu, 26 Nov 2015 20:44:31 GMT';
}()), this.createjs = this.createjs || {}, createjs.extend = function (a, b) {
  function c() { this.constructor = a; } return c.prototype = b.prototype, a.prototype = new c();
}, this.createjs = this.createjs || {}, createjs.promote = function (a, b) {
  let c = a.prototype,
    d = Object.getPrototypeOf && Object.getPrototypeOf(c) || c.__proto__; if (d) { c[`${b += '_'}constructor`] = d.constructor; for (const e in d)c.hasOwnProperty(e) && typeof d[e] === 'function' && (c[b + e] = d[e]); } return a;
}, this.createjs = this.createjs || {}, (function () {
  createjs.proxy = function (a, b) { const c = Array.prototype.slice.call(arguments, 2); return function () { return a.apply(b, Array.prototype.slice.call(arguments, 0).concat(c)); }; };
}()), this.createjs = this.createjs || {}, createjs.indexOf = function (a, b) {
  for (let c = 0, d = a.length; d > c; c++) if (b === a[c]) return c; return -1;
}, this.createjs = this.createjs || {}, (function () {
  function Event(a, b, c) { this.type = a, this.target = null, this.currentTarget = null, this.eventPhase = 0, this.bubbles = !!b, this.cancelable = !!c, this.timeStamp = (new Date()).getTime(), this.defaultPrevented = !1, this.propagationStopped = !1, this.immediatePropagationStopped = !1, this.removed = !1; } const a = Event.prototype; a.preventDefault = function () { this.defaultPrevented = this.cancelable && !0; }, a.stopPropagation = function () { this.propagationStopped = !0; }, a.stopImmediatePropagation = function () { this.immediatePropagationStopped = this.propagationStopped = !0; }, a.remove = function () { this.removed = !0; }, a.clone = function () { return new Event(this.type, this.bubbles, this.cancelable); }, a.set = function (a) { for (const b in a) this[b] = a[b]; return this; }, a.toString = function () { return `[Event (type=${this.type})]`; }, createjs.Event = Event;
}()), this.createjs = this.createjs || {}, (function () {
  function ErrorEvent(a, b, c) { this.Event_constructor('error'), this.title = a, this.message = b, this.data = c; } const a = createjs.extend(ErrorEvent, createjs.Event); a.clone = function () { return new createjs.ErrorEvent(this.title, this.message, this.data); }, createjs.ErrorEvent = createjs.promote(ErrorEvent, 'Event');
}()), this.createjs = this.createjs || {}, (function () {
   function EventDispatcher() { this._listeners = null, this._captureListeners = null; } const a = EventDispatcher.prototype; EventDispatcher.initialize = function (b) { b.addEventListener = a.addEventListener, b.on = a.on, b.removeEventListener = b.off = a.removeEventListener, b.removeAllEventListeners = a.removeAllEventListeners, b.hasEventListener = a.hasEventListener, b.dispatchEvent = a.dispatchEvent, b._dispatchEvent = a._dispatchEvent, b.willTrigger = a.willTrigger; }, a.addEventListener = function (a, b, c) { let d; d = c ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {}; let e = d[a]; return e && this.removeEventListener(a, b, c), e = d[a], e ? e.push(b) : d[a] = [b], b; }, a.on = function (a, b, c, d, e, f) { return b.handleEvent && (c = c || b, b = b.handleEvent), c = c || this, this.addEventListener(a, (a) => { b.call(c, a, e), d && a.remove(); }, f); }, a.removeEventListener = function (a, b, c) { const d = c ? this._captureListeners : this._listeners; if (d) { const e = d[a]; if (e) for (let f = 0, g = e.length; g > f; f++) if (e[f] == b) { g == 1 ? delete d[a] : e.splice(f, 1); break; } } }, a.off = a.removeEventListener, a.removeAllEventListeners = function (a) { a ? (this._listeners && delete this._listeners[a], this._captureListeners && delete this._captureListeners[a]) : this._listeners = this._captureListeners = null; }, a.dispatchEvent = function (a, b, c) {
    if (typeof a === 'string') { const d = this._listeners; if (!(b || d && d[a])) return !0; a = new createjs.Event(a, b, c); } else a.target && a.clone && (a = a.clone()); try { a.target = this; } catch (e) {} if (a.bubbles && this.parent) {
      for (var f = this, g = [f]; f.parent;)g.push(f = f.parent); let h,
        i = g.length; for (h = i - 1; h >= 0 && !a.propagationStopped; h--)g[h]._dispatchEvent(a, 1 + (h == 0)); for (h = 1; i > h && !a.propagationStopped; h++)g[h]._dispatchEvent(a, 3);
    } else this._dispatchEvent(a, 2); return !a.defaultPrevented;
  }, a.hasEventListener = function (a) {
    let b = this._listeners,
      c = this._captureListeners; return !!(b && b[a] || c && c[a]);
  }, a.willTrigger = function (a) { for (let b = this; b;) { if (b.hasEventListener(a)) return !0; b = b.parent; } return !1; }, a.toString = function () { return '[EventDispatcher]'; }, a._dispatchEvent = function (a, b) {
    let c,
      d = b == 1 ? this._captureListeners : this._listeners; if (a && d) { let e = d[a.type]; if (!e || !(c = e.length)) return; try { a.currentTarget = this; } catch (f) {} try { a.eventPhase = b; } catch (f) {}a.removed = !1, e = e.slice(); for (let g = 0; c > g && !a.immediatePropagationStopped; g++) { const h = e[g]; h.handleEvent ? h.handleEvent(a) : h(a), a.removed && (this.off(a.type, h, b == 1), a.removed = !1); } }
  }, createjs.EventDispatcher = EventDispatcher;
 }()), this.createjs = this.createjs || {}, (function () {
  function ProgressEvent(a, b) { this.Event_constructor('progress'), this.loaded = a, this.total = b == null ? 1 : b, this.progress = b == 0 ? 0 : this.loaded / this.total; } const a = createjs.extend(ProgressEvent, createjs.Event); a.clone = function () { return new createjs.ProgressEvent(this.loaded, this.total); }, createjs.ProgressEvent = createjs.promote(ProgressEvent, 'Event');
}(window)), function () {
  function a(b, d) {
    function f(a) {
      if (f[a] !== q) return f[a]; let b; if (a == 'bug-string-char-index')b = 'a'[0] != 'a'; else if (a == 'json')b = f('json-stringify') && f('json-parse'); else {
         let c,
          e = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}'; if (a == 'json-stringify') {
            let i = d.stringify,
               k = typeof i === 'function' && t; if (k) { (c = function () { return 1; }).toJSON = c; try { k = i(0) === '0' && i(new g()) === '0' && i(new h()) == '""' && i(s) === q && i(q) === q && i() === q && i(c) === '1' && i([c]) == '[1]' && i([q]) == '[null]' && i(null) == 'null' && i([q, s, null]) == '[null,null,null]' && i({ a: [c, !0, !1, null, '\x00\b\n\f\r	'] }) == e && i(null, c) === '1' && i([1, 2], null, 1) == '[\n 1,\n 2\n]' && i(new j(-864e13)) == '"-271821-04-20T00:00:00.000Z"' && i(new j(864e13)) == '"+275760-09-13T00:00:00.000Z"' && i(new j(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' && i(new j(-1)) == '"1969-12-31T23:59:59.999Z"'; } catch (l) { k = !1; } }b = k;
          } if (a == 'json-parse') { const m = d.parse; if (typeof m === 'function') try { if (m('0') === 0 && !m(!1)) { c = m(e); var n = c.a.length == 5 && c.a[0] === 1; if (n) { try { n = !m('"	"'); } catch (l) {} if (n) try { n = m('01') !== 1; } catch (l) {} if (n) try { n = m('1.') !== 1; } catch (l) {} } } } catch (l) { n = !1; }b = n; }
       } return f[a] = !!b;
    }b || (b = e.Object()), d || (d = e.Object()); var g = b.Number || e.Number,
       h = b.String || e.String,
       i = b.Object || e.Object,
       j = b.Date || e.Date,
       k = b.SyntaxError || e.SyntaxError,
       l = b.TypeError || e.TypeError,
       m = b.Math || e.Math,
       n = b.JSON || e.JSON; typeof n === 'object' && n && (d.stringify = n.stringify, d.parse = n.parse); var o,
        p,
        q,
        r = i.prototype,
        s = r.toString,
        t = new j(-0xc782b5b800cec); try { t = t.getUTCFullYear() == -109252 && t.getUTCMonth() === 0 && t.getUTCDate() === 1 && t.getUTCHours() == 10 && t.getUTCMinutes() == 37 && t.getUTCSeconds() == 6 && t.getUTCMilliseconds() == 708; } catch (u) {} if (!f('json')) {
          let v = '[object Function]',
             w = '[object Date]',
             x = '[object Number]',
             y = '[object String]',
             z = '[object Array]',
             A = '[object Boolean]',
             B = f('bug-string-char-index'); if (!t) {
              var C = m.floor,
               D = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334],
               E = function (a, b) { return D[b] + 365 * (a - 1970) + C((a - 1969 + (b = +(b > 1))) / 4) - C((a - 1901 + b) / 100) + C((a - 1601 + b) / 400); };
            } if ((o = r.hasOwnProperty) || (o = function (a) {
             let b,
             c = {}; return (c.__proto__ = null, c.__proto__ = { toString: 1 }, c).toString != s ? o = function (a) {
              let b = this.__proto__,
              c = a in (this.__proto__ = null, this); return this.__proto__ = b, c;
            } : (b = c.constructor, o = function (a) { const c = (this.constructor || b).prototype; return a in this && !(a in c && this[a] === c[a]); }), c = null, o.call(this, a);
           }), p = function (a, b) {
           let d,
            e,
            f,
            g = 0; (d = function () { this.valueOf = 0; }).prototype.valueOf = 0, e = new d(); for (f in e)o.call(e, f) && g++; return d = e = null, g ? p = g == 2 ? function (a, b) {
            let c,
        d = {},
        e = s.call(a) == v; for (c in a)e && c == 'prototype' || o.call(d, c) || !(d[c] = 1) || !o.call(a, c) || b(c);
          } : function (a, b) {
      let c,
             d,
             e = s.call(a) == v; for (c in a)e && c == 'prototype' || !o.call(a, c) || (d = c === 'constructor') || b(c); (d || o.call(a, c = 'constructor')) && b(c);
    } : (e = ['valueOf', 'toString', 'toLocaleString', 'propertyIsEnumerable', 'isPrototypeOf', 'hasOwnProperty', 'constructor'], p = function (a, b) {
           let d,
        f,
        g = s.call(a) == v,
        h = !g && typeof a.constructor !== 'function' && c[typeof a.hasOwnProperty] && a.hasOwnProperty || o; for (d in a)g && d == 'prototype' || !h.call(a, d) || b(d); for (f = e.length; d = e[--f]; h.call(a, d) && b(d));
         }), p(a, b);
         }, !f('json-stringify')) {
             var F = { 92: '\\\\', 34: '\\"', 8: '\\b', 12: '\\f', 10: '\\n', 13: '\\r', 9: '\\t' },
             G = '000000',
             H = function (a, b) { return (G + (b || 0)).slice(-a); },
             I = '\\u00',
             J = function (a) { for (var b = '"', c = 0, d = a.length, e = !B || d > 10, f = e && (B ? a.split('') : a); d > c; c++) { const g = a.charCodeAt(c); switch (g) { case 8:case 9:case 10:case 12:case 13:case 34:case 92:b += F[g]; break; default:if (g < 32) { b += I + H(2, g.toString(16)); break; }b += e ? f[c] : a.charAt(c); } } return `${b}"`; },
             K = function (a, b, c, d, e, f, g) {
              let h,
              i,
              j,
              k,
              m,
              n,
              r,
              t,
              u,
              v,
              B,
              D,
              F,
              G,
              I,
              L; try { h = b[a]; } catch (M) {} if (typeof h === 'object' && h) if (i = s.call(h), i != w || o.call(h, 'toJSON')) typeof h.toJSON === 'function' && (i != x && i != y && i != z || o.call(h, 'toJSON')) && (h = h.toJSON(a)); else if (h > -1 / 0 && 1 / 0 > h) { if (E) { for (m = C(h / 864e5), j = C(m / 365.2425) + 1970 - 1; E(j + 1, 0) <= m; j++);for (k = C((m - E(j, 0)) / 30.42); E(j, k + 1) <= m; k++);m = 1 + m - E(j, k), n = (h % 864e5 + 864e5) % 864e5, r = C(n / 36e5) % 24, t = C(n / 6e4) % 60, u = C(n / 1e3) % 60, v = n % 1e3; } else j = h.getUTCFullYear(), k = h.getUTCMonth(), m = h.getUTCDate(), r = h.getUTCHours(), t = h.getUTCMinutes(), u = h.getUTCSeconds(), v = h.getUTCMilliseconds(); h = `${j <= 0 || j >= 1e4 ? (j < 0 ? '-' : '+') + H(6, j < 0 ? -j : j) : H(4, j)}-${H(2, k + 1)}-${H(2, m)}T${H(2, r)}:${H(2, t)}:${H(2, u)}.${H(3, v)}Z`; } else h = null; if (c && (h = c.call(b, a, h)), h === null) return 'null'; if (i = s.call(h), i == A) return `${h}`; if (i == x) return h > -1 / 0 && 1 / 0 > h ? `${h}` : 'null'; if (i == y) return J(`${h}`); if (typeof h === 'object') { for (G = g.length; G--;) if (g[G] === h) throw l(); if (g.push(h), B = [], I = f, f += e, i == z) { for (F = 0, G = h.length; G > F; F++)D = K(F, h, c, d, e, f, g), B.push(D === q ? 'null' : D); L = B.length ? e ? `[\n${f}${B.join(`,\n${f}`)}\n${I}]` : `[${B.join(',')}]` : '[]'; } else p(d || h, (a) => { const b = K(a, h, c, d, e, f, g); b !== q && B.push(`${J(a)}:${e ? ' ' : ''}${b}`); }), L = B.length ? e ? `{\n${f}${B.join(`,\n${f}`)}\n${I}}` : `{${B.join(',')}}` : '{}'; return g.pop(), L; }
            }; d.stringify = function (a, b, d) {
            let e,
        f,
        g,
        h; if (c[typeof b] && b) if ((h = s.call(b)) == v)f = b; else if (h == z) { g = {}; for (var i, j = 0, k = b.length; k > j; i = b[j++], h = s.call(i), (h == y || h == x) && (g[i] = 1)); } if (d) if ((h = s.call(d)) == x) { if ((d -= d % 1) > 0) for (e = '', d > 10 && (d = 10); e.length < d; e += ' '); } else h == y && (e = d.length <= 10 ? d : d.slice(0, 10)); return K('', (i = {}, i[''] = a, i), f, g, e, '', []);
          };
           } if (!f('json-parse')) {
           var L,
            M,
            N = h.fromCharCode,
            O = { 92: '\\', 34: '"', 47: '/', 98: '\b', 116: '	', 110: '\n', 102: '\f', 114: '\r' },
            P = function () { throw L = M = null, k(); },
            Q = function () { for (var a, b, c, d, e, f = M, g = f.length; g > L;) switch (e = f.charCodeAt(L)) { case 9:case 10:case 13:case 32:L++; break; case 123:case 125:case 91:case 93:case 58:case 44:return a = B ? f.charAt(L) : f[L], L++, a; case 34:for (a = '@', L++; g > L;) if (e = f.charCodeAt(L), e < 32)P(); else if (e == 92) switch (e = f.charCodeAt(++L)) { case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:a += O[e], L++; break; case 117:for (b = ++L, c = L + 4; c > L; L++)e = f.charCodeAt(L), e >= 48 && e <= 57 || e >= 97 && e <= 102 || e >= 65 && e <= 70 || P(); a += N(`0x${f.slice(b, L)}`); break; default:P(); } else { if (e == 34) break; for (e = f.charCodeAt(L), b = L; e >= 32 && e != 92 && e != 34;)e = f.charCodeAt(++L); a += f.slice(b, L); } if (f.charCodeAt(L) == 34) return L++, a; P(); default:if (b = L, e == 45 && (d = !0, e = f.charCodeAt(++L)), e >= 48 && e <= 57) { for (e == 48 && (e = f.charCodeAt(L + 1), e >= 48 && e <= 57) && P(), d = !1; g > L && (e = f.charCodeAt(L), e >= 48 && e <= 57); L++);if (f.charCodeAt(L) == 46) { for (c = ++L; g > c && (e = f.charCodeAt(c), e >= 48 && e <= 57); c++);c == L && P(), L = c; } if (e = f.charCodeAt(L), e == 101 || e == 69) { for (e = f.charCodeAt(++L), (e == 43 || e == 45) && L++, c = L; g > c && (e = f.charCodeAt(c), e >= 48 && e <= 57); c++);c == L && P(), L = c; } return +f.slice(b, L); } if (d && P(), f.slice(L, L + 4) == 'true') return L += 4, !0; if (f.slice(L, L + 5) == 'false') return L += 5, !1; if (f.slice(L, L + 4) == 'null') return L += 4, null; P(); } return '$'; },
            R = function (a) {
            let b,
        c; if (a == '$' && P(), typeof a === 'string') { if ((B ? a.charAt(0) : a[0]) == '@') return a.slice(1); if (a == '[') { for (b = []; a = Q(), a != ']'; c || (c = !0))c && (a == ',' ? (a = Q(), a == ']' && P()) : P()), a == ',' && P(), b.push(R(a)); return b; } if (a == '{') { for (b = {}; a = Q(), a != '}'; c || (c = !0))c && (a == ',' ? (a = Q(), a == '}' && P()) : P()), (a == ',' || typeof a !== 'string' || (B ? a.charAt(0) : a[0]) != '@' || Q() != ':') && P(), b[a.slice(1)] = R(Q()); return b; }P(); } return a;
          },
            S = function (a, b, c) { const d = T(a, b, c); d === q ? delete a[b] : a[b] = d; },
            T = function (a, b, c) {
            let d,
        e = a[b]; if (typeof e === 'object' && e) if (s.call(e) == z) for (d = e.length; d--;)S(e, d, c); else p(e, (a) => { S(e, a, c); }); return c.call(a, b, e);
          }; d.parse = function (a, b) {
      let c,
             d; return L = 0, M = `${a}`, c = R(Q()), Q() != '$' && P(), L = M = null, b && s.call(b) == v ? T((d = {}, d[''] = c, d), '', b) : c;
    };
         }
        } return d.runInContext = a, d;
  } var b = typeof define === 'function' && define.amd,
    c = { function: !0, object: !0 },
    d = c[typeof exports] && exports && !exports.nodeType && exports,
    e = c[typeof window] && window || this,
    f = d && c[typeof module] && module && !module.nodeType && typeof global === 'object' && global; if (!f || f.global !== f && f.window !== f && f.self !== f || (e = f), d && !b)a(e, d); else {
       var g = e.JSON,
        h = e.JSON3,
        i = !1,
        j = a(e, e.JSON3 = { noConflict() { return i || (i = !0, e.JSON = g, e.JSON3 = h, g = h = null), j; } }); e.JSON = { parse: j.parse, stringify: j.stringify };
     }b && define(() => { return j; });
}.call(this), (function () { const a = {}; a.appendToHead = function (b) { a.getHead().appendChild(b); }, a.getHead = function () { return document.head || document.getElementsByTagName('head')[0]; }, a.getBody = function () { return document.body || document.getElementsByTagName('body')[0]; }, createjs.DomUtils = a; }()), (function () { const a = {}; a.parseXML = function (a, b) { let c = null; try { if (window.DOMParser) { const d = new DOMParser(); c = d.parseFromString(a, b); } } catch (e) {} if (!c) try { c = new ActiveXObject('Microsoft.XMLDOM'), c.async = !1, c.loadXML(a); } catch (e) { c = null; } return c; }, a.parseJSON = function (a) { if (a == null) return null; try { return JSON.parse(a); } catch (b) { throw b; } }, createjs.DataUtils = a; }()), this.createjs = this.createjs || {}, (function () {
  function LoadItem() { this.src = null, this.type = null, this.id = null, this.maintainOrder = !1, this.callback = null, this.data = null, this.method = createjs.LoadItem.GET, this.values = null, this.headers = null, this.withCredentials = !1, this.mimeType = null, this.crossOrigin = null, this.loadTimeout = b.LOAD_TIMEOUT_DEFAULT; } var a = LoadItem.prototype = {},
    b = LoadItem; b.LOAD_TIMEOUT_DEFAULT = 8e3, b.create = function (a) { if (typeof a === 'string') { const c = new LoadItem(); return c.src = a, c; } if (a instanceof b) return a; if (a instanceof Object && a.src) return a.loadTimeout == null && (a.loadTimeout = b.LOAD_TIMEOUT_DEFAULT), a; throw new Error('Type not recognized.'); }, a.set = function (a) { for (const b in a) this[b] = a[b]; return this; }, createjs.LoadItem = b;
}()), (function () {
  const a = {}; a.ABSOLUTE_PATT = /^(?:\w+:)?\/{2}/i, a.RELATIVE_PATT = /^[.\/]*?\//i, a.EXTENSION_PATT = /\/?[^\/]+\.(\w{1,5})$/i, a.parseURI = function (b) { const c = { absolute: !1, relative: !1 }; if (b == null) return c; const d = b.indexOf('?'); d > -1 && (b = b.substr(0, d)); let e; return a.ABSOLUTE_PATT.test(b) ? c.absolute = !0 : a.RELATIVE_PATT.test(b) && (c.relative = !0), (e = b.match(a.EXTENSION_PATT)) && (c.extension = e[1].toLowerCase()), c; }, a.formatQueryString = function (a, b) { if (a == null) throw new Error('You must specify data.'); let c = []; for (const d in a)c.push(`${d}=${escape(a[d])}`); return b && (c = c.concat(b)), c.join('&'); }, a.buildPath = function (a, b) {
     if (b == null) return a; let c = [],
      d = a.indexOf('?'); if (d != -1) { const e = a.slice(d + 1); c = c.concat(e.split('&')); } return d != -1 ? `${a.slice(0, d)}?${this.formatQueryString(b, c)}` : `${a}?${this.formatQueryString(b, c)}`;
   }, a.isCrossDomain = function (a) { const b = document.createElement('a'); b.href = a.src; const c = document.createElement('a'); c.href = location.href; const d = b.hostname != '' && (b.port != c.port || b.protocol != c.protocol || b.hostname != c.hostname); return d; }, a.isLocal = function (a) { const b = document.createElement('a'); return b.href = a.src, b.hostname == '' && b.protocol == 'file:'; }, a.isBinary = function (a) { switch (a) { case createjs.AbstractLoader.IMAGE:case createjs.AbstractLoader.BINARY:return !0; default:return !1; } }, a.isImageTag = function (a) { return a instanceof HTMLImageElement; }, a.isAudioTag = function (a) { return window.HTMLAudioElement ? a instanceof HTMLAudioElement : !1; }, a.isVideoTag = function (a) { return window.HTMLVideoElement ? a instanceof HTMLVideoElement : !1; }, a.isText = function (a) { switch (a) { case createjs.AbstractLoader.TEXT:case createjs.AbstractLoader.JSON:case createjs.AbstractLoader.MANIFEST:case createjs.AbstractLoader.XML:case createjs.AbstractLoader.CSS:case createjs.AbstractLoader.SVG:case createjs.AbstractLoader.JAVASCRIPT:case createjs.AbstractLoader.SPRITESHEET:return !0; default:return !1; } }, a.getTypeByExtension = function (a) { if (a == null) return createjs.AbstractLoader.TEXT; switch (a.toLowerCase()) { case 'jpeg':case 'jpg':case 'gif':case 'png':case 'webp':case 'bmp':return createjs.AbstractLoader.IMAGE; case 'ogg':case 'mp3':case 'webm':return createjs.AbstractLoader.SOUND; case 'mp4':case 'webm':case 'ts':return createjs.AbstractLoader.VIDEO; case 'json':return createjs.AbstractLoader.JSON; case 'xml':return createjs.AbstractLoader.XML; case 'css':return createjs.AbstractLoader.CSS; case 'js':return createjs.AbstractLoader.JAVASCRIPT; case 'svg':return createjs.AbstractLoader.SVG; default:return createjs.AbstractLoader.TEXT; } }, createjs.RequestUtils = a;
}()), this.createjs = this.createjs || {}, (function () {
   function AbstractLoader(a, b, c) { this.EventDispatcher_constructor(), this.loaded = !1, this.canceled = !1, this.progress = 0, this.type = c, this.resultFormatter = null, this._item = a ? createjs.LoadItem.create(a) : null, this._preferXHR = b, this._result = null, this._rawResult = null, this._loadedItems = null, this._tagSrcAttribute = null, this._tag = null; } let a = createjs.extend(AbstractLoader, createjs.EventDispatcher),
    b = AbstractLoader; b.POST = 'POST', b.GET = 'GET', b.BINARY = 'binary', b.CSS = 'css', b.IMAGE = 'image', b.JAVASCRIPT = 'javascript', b.JSON = 'json', b.JSONP = 'jsonp', b.MANIFEST = 'manifest', b.SOUND = 'sound', b.VIDEO = 'video', b.SPRITESHEET = 'spritesheet', b.SVG = 'svg', b.TEXT = 'text', b.XML = 'xml', a.getItem = function () { return this._item; }, a.getResult = function (a) { return a ? this._rawResult : this._result; }, a.getTag = function () { return this._tag; }, a.setTag = function (a) { this._tag = a; }, a.load = function () { this._createRequest(), this._request.on('complete', this, this), this._request.on('progress', this, this), this._request.on('loadStart', this, this), this._request.on('abort', this, this), this._request.on('timeout', this, this), this._request.on('error', this, this); const a = new createjs.Event('initialize'); a.loader = this._request, this.dispatchEvent(a), this._request.load(); }, a.cancel = function () { this.canceled = !0, this.destroy(); }, a.destroy = function () { this._request && (this._request.removeAllEventListeners(), this._request.destroy()), this._request = null, this._item = null, this._rawResult = null, this._result = null, this._loadItems = null, this.removeAllEventListeners(); }, a.getLoadedItems = function () { return this._loadedItems; }, a._createRequest = function () { this._request = this._preferXHR ? new createjs.XHRRequest(this._item) : new createjs.TagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute); }, a._createTag = function () { return null; }, a._sendLoadStart = function () { this._isCanceled() || this.dispatchEvent('loadstart'); }, a._sendProgress = function (a) { if (!this._isCanceled()) { let b = null; typeof a === 'number' ? (this.progress = a, b = new createjs.ProgressEvent(this.progress)) : (b = a, this.progress = a.loaded / a.total, b.progress = this.progress, (isNaN(this.progress) || 1 / 0 == this.progress) && (this.progress = 0)), this.hasEventListener('progress') && this.dispatchEvent(b); } }, a._sendComplete = function () { if (!this._isCanceled()) { this.loaded = !0; const a = new createjs.Event('complete'); a.rawResult = this._rawResult, this._result != null && (a.result = this._result), this.dispatchEvent(a); } }, a._sendError = function (a) { !this._isCanceled() && this.hasEventListener('error') && (a == null && (a = new createjs.ErrorEvent('PRELOAD_ERROR_EMPTY')), this.dispatchEvent(a)); }, a._isCanceled = function () { return window.createjs == null || this.canceled ? !0 : !1; }, a.resultFormatter = null, a.handleEvent = function (a) { switch (a.type) { case 'complete':this._rawResult = a.target._response; var b = this.resultFormatter && this.resultFormatter(this); b instanceof Function ? b.call(this, createjs.proxy(this._resultFormatSuccess, this), createjs.proxy(this._resultFormatFailed, this)) : (this._result = b || this._rawResult, this._sendComplete()); break; case 'progress':this._sendProgress(a); break; case 'error':this._sendError(a); break; case 'loadstart':this._sendLoadStart(); break; case 'abort':case 'timeout':this._isCanceled() || this.dispatchEvent(new createjs.ErrorEvent(`PRELOAD_${a.type.toUpperCase()}_ERROR`)); } }, a._resultFormatSuccess = function (a) { this._result = a, this._sendComplete(); }, a._resultFormatFailed = function (a) { this._sendError(a); }, a.buildPath = function (a, b) { return createjs.RequestUtils.buildPath(a, b); }, a.toString = function () { return '[PreloadJS AbstractLoader]'; }, createjs.AbstractLoader = createjs.promote(AbstractLoader, 'EventDispatcher');
 }()), this.createjs = this.createjs || {}, (function () {
  function AbstractMediaLoader(a, b, c) { this.AbstractLoader_constructor(a, b, c), this.resultFormatter = this._formatResult, this._tagSrcAttribute = 'src', this.on('initialize', this._updateXHR, this); } const a = createjs.extend(AbstractMediaLoader, createjs.AbstractLoader); a.load = function () { this._tag || (this._tag = this._createTag(this._item.src)), this._tag.preload = 'auto', this._tag.load(), this.AbstractLoader_load(); }, a._createTag = function () {}, a._createRequest = function () { this._request = this._preferXHR ? new createjs.XHRRequest(this._item) : new createjs.MediaTagRequest(this._item, this._tag || this._createTag(), this._tagSrcAttribute); }, a._updateXHR = function (a) { a.loader.setResponseType && a.loader.setResponseType('blob'); }, a._formatResult = function (a) {
    if (this._tag.removeEventListener && this._tag.removeEventListener('canplaythrough', this._loadedHandler), this._tag.onstalled = null, this._preferXHR) {
      let b = window.URL || window.webkitURL,
        c = a.getResult(!0); a.getTag().src = b.createObjectURL(c);
    } return a.getTag();
  }, createjs.AbstractMediaLoader = createjs.promote(AbstractMediaLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  let AbstractRequest = function (a) { this._item = a; },
    a = createjs.extend(AbstractRequest, createjs.EventDispatcher); a.load = function () {}, a.destroy = function () {}, a.cancel = function () {}, createjs.AbstractRequest = createjs.promote(AbstractRequest, 'EventDispatcher');
}()), this.createjs = this.createjs || {}, (function () {
  function TagRequest(a, b, c) { this.AbstractRequest_constructor(a), this._tag = b, this._tagSrcAttribute = c, this._loadedHandler = createjs.proxy(this._handleTagComplete, this), this._addedToDOM = !1, this._startTagVisibility = null; } const a = createjs.extend(TagRequest, createjs.AbstractRequest); a.load = function () { this._tag.onload = createjs.proxy(this._handleTagComplete, this), this._tag.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this), this._tag.onerror = createjs.proxy(this._handleError, this); const a = new createjs.Event('initialize'); a.loader = this._tag, this.dispatchEvent(a), this._hideTag(), this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout), this._tag[this._tagSrcAttribute] = this._item.src, this._tag.parentNode == null && (window.document.body.appendChild(this._tag), this._addedToDOM = !0); }, a.destroy = function () { this._clean(), this._tag = null, this.AbstractRequest_destroy(); }, a._handleReadyStateChange = function () { clearTimeout(this._loadTimeout); const a = this._tag; (a.readyState == 'loaded' || a.readyState == 'complete') && this._handleTagComplete(); }, a._handleError = function () { this._clean(), this.dispatchEvent('error'); }, a._handleTagComplete = function () { this._rawResult = this._tag, this._result = this.resultFormatter && this.resultFormatter(this) || this._rawResult, this._clean(), this._showTag(), this.dispatchEvent('complete'); }, a._handleTimeout = function () { this._clean(), this.dispatchEvent(new createjs.Event('timeout')); }, a._clean = function () { this._tag.onload = null, this._tag.onreadystatechange = null, this._tag.onerror = null, this._addedToDOM && this._tag.parentNode != null && this._tag.parentNode.removeChild(this._tag), clearTimeout(this._loadTimeout); }, a._hideTag = function () { this._startTagVisibility = this._tag.style.visibility, this._tag.style.visibility = 'hidden'; }, a._showTag = function () { this._tag.style.visibility = this._startTagVisibility; }, a._handleStalled = function () {}, createjs.TagRequest = createjs.promote(TagRequest, 'AbstractRequest');
 }()), this.createjs = this.createjs || {}, (function () {
  function MediaTagRequest(a, b, c) { this.AbstractRequest_constructor(a), this._tag = b, this._tagSrcAttribute = c, this._loadedHandler = createjs.proxy(this._handleTagComplete, this); } const a = createjs.extend(MediaTagRequest, createjs.TagRequest); a.load = function () { const a = createjs.proxy(this._handleStalled, this); this._stalledCallback = a; const b = createjs.proxy(this._handleProgress, this); this._handleProgress = b, this._tag.addEventListener('stalled', a), this._tag.addEventListener('progress', b), this._tag.addEventListener && this._tag.addEventListener('canplaythrough', this._loadedHandler, !1), this.TagRequest_load(); }, a._handleReadyStateChange = function () { clearTimeout(this._loadTimeout); const a = this._tag; (a.readyState == 'loaded' || a.readyState == 'complete') && this._handleTagComplete(); }, a._handleStalled = function () {}, a._handleProgress = function (a) { if (a && !(a.loaded > 0 && a.total == 0)) { const b = new createjs.ProgressEvent(a.loaded, a.total); this.dispatchEvent(b); } }, a._clean = function () { this._tag.removeEventListener && this._tag.removeEventListener('canplaythrough', this._loadedHandler), this._tag.removeEventListener('stalled', this._stalledCallback), this._tag.removeEventListener('progress', this._progressCallback), this.TagRequest__clean(); }, createjs.MediaTagRequest = createjs.promote(MediaTagRequest, 'TagRequest');
}()), this.createjs = this.createjs || {}, (function () {
  function XHRRequest(a) { this.AbstractRequest_constructor(a), this._request = null, this._loadTimeout = null, this._xhrLevel = 1, this._response = null, this._rawResponse = null, this._canceled = !1, this._handleLoadStartProxy = createjs.proxy(this._handleLoadStart, this), this._handleProgressProxy = createjs.proxy(this._handleProgress, this), this._handleAbortProxy = createjs.proxy(this._handleAbort, this), this._handleErrorProxy = createjs.proxy(this._handleError, this), this._handleTimeoutProxy = createjs.proxy(this._handleTimeout, this), this._handleLoadProxy = createjs.proxy(this._handleLoad, this), this._handleReadyStateChangeProxy = createjs.proxy(this._handleReadyStateChange, this), !this._createXHR(a); } const a = createjs.extend(XHRRequest, createjs.AbstractRequest); XHRRequest.ACTIVEX_VERSIONS = ['Msxml2.XMLHTTP.6.0', 'Msxml2.XMLHTTP.5.0', 'Msxml2.XMLHTTP.4.0', 'MSXML2.XMLHTTP.3.0', 'MSXML2.XMLHTTP', 'Microsoft.XMLHTTP'], a.getResult = function (a) { return a && this._rawResponse ? this._rawResponse : this._response; }, a.cancel = function () { this.canceled = !0, this._clean(), this._request.abort(); }, a.load = function () { if (this._request == null) return void this._handleError(); this._request.addEventListener != null ? (this._request.addEventListener('loadstart', this._handleLoadStartProxy, !1), this._request.addEventListener('progress', this._handleProgressProxy, !1), this._request.addEventListener('abort', this._handleAbortProxy, !1), this._request.addEventListener('error', this._handleErrorProxy, !1), this._request.addEventListener('timeout', this._handleTimeoutProxy, !1), this._request.addEventListener('load', this._handleLoadProxy, !1), this._request.addEventListener('readystatechange', this._handleReadyStateChangeProxy, !1)) : (this._request.onloadstart = this._handleLoadStartProxy, this._request.onprogress = this._handleProgressProxy, this._request.onabort = this._handleAbortProxy, this._request.onerror = this._handleErrorProxy, this._request.ontimeout = this._handleTimeoutProxy, this._request.onload = this._handleLoadProxy, this._request.onreadystatechange = this._handleReadyStateChangeProxy), this._xhrLevel == 1 && (this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout)); try { this._item.values && this._item.method != createjs.AbstractLoader.GET ? this._item.method == createjs.AbstractLoader.POST && this._request.send(createjs.RequestUtils.formatQueryString(this._item.values)) : this._request.send(); } catch (a) { this.dispatchEvent(new createjs.ErrorEvent('XHR_SEND', null, a)); } }, a.setResponseType = function (a) { a === 'blob' && (a = window.URL ? 'blob' : 'arraybuffer', this._responseType = a), this._request.responseType = a; }, a.getAllResponseHeaders = function () { return this._request.getAllResponseHeaders instanceof Function ? this._request.getAllResponseHeaders() : null; }, a.getResponseHeader = function (a) { return this._request.getResponseHeader instanceof Function ? this._request.getResponseHeader(a) : null; }, a._handleProgress = function (a) { if (a && !(a.loaded > 0 && a.total == 0)) { const b = new createjs.ProgressEvent(a.loaded, a.total); this.dispatchEvent(b); } }, a._handleLoadStart = function () { clearTimeout(this._loadTimeout), this.dispatchEvent('loadstart'); }, a._handleAbort = function (a) { this._clean(), this.dispatchEvent(new createjs.ErrorEvent('XHR_ABORTED', null, a)); }, a._handleError = function (a) { this._clean(), this.dispatchEvent(new createjs.ErrorEvent(a.message)); }, a._handleReadyStateChange = function () { this._request.readyState == 4 && this._handleLoad(); }, a._handleLoad = function () { if (!this.loaded) { this.loaded = !0; const a = this._checkError(); if (a) return void this._handleError(a); if (this._response = this._getResponse(), this._responseType === 'arraybuffer') try { this._response = new Blob([this._response]); } catch (b) { if (window.BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, b.name === 'TypeError' && window.BlobBuilder) { const c = new BlobBuilder(); c.append(this._response), this._response = c.getBlob(); } } this._clean(), this.dispatchEvent(new createjs.Event('complete')); } }, a._handleTimeout = function (a) { this._clean(), this.dispatchEvent(new createjs.ErrorEvent('PRELOAD_TIMEOUT', null, a)); }, a._checkError = function () { const a = parseInt(this._request.status); switch (a) { case 404:case 0:return new Error(a); } return null; }, a._getResponse = function () { if (this._response != null) return this._response; if (this._request.response != null) return this._request.response; try { if (this._request.responseText != null) return this._request.responseText; } catch (a) {} try { if (this._request.responseXML != null) return this._request.responseXML; } catch (a) {} return null; }, a._createXHR = function (a) {
      let b = createjs.RequestUtils.isCrossDomain(a),
      c = {},
      d = null; if (window.XMLHttpRequest)d = new XMLHttpRequest(), b && void 0 === d.withCredentials && window.XDomainRequest && (d = new XDomainRequest()); else { for (let e = 0, f = s.ACTIVEX_VERSIONS.length; f > e; e++) { const g = s.ACTIVEX_VERSIONS[e]; try { d = new ActiveXObject(g); break; } catch (h) {} } if (d == null) return !1; }a.mimeType == null && createjs.RequestUtils.isText(a.type) && (a.mimeType = 'text/plain; charset=utf-8'), a.mimeType && d.overrideMimeType && d.overrideMimeType(a.mimeType), this._xhrLevel = typeof d.responseType === 'string' ? 2 : 1; let i = null; if (i = a.method == createjs.AbstractLoader.GET ? createjs.RequestUtils.buildPath(a.src, a.values) : a.src, d.open(a.method || createjs.AbstractLoader.GET, i, !0), b && d instanceof XMLHttpRequest && this._xhrLevel == 1 && (c.Origin = location.origin), a.values && a.method == createjs.AbstractLoader.POST && (c['Content-Type'] = 'application/x-www-form-urlencoded'), b || c['X-Requested-With'] || (c['X-Requested-With'] = 'XMLHttpRequest'), a.headers) for (var j in a.headers)c[j] = a.headers[j]; for (j in c)d.setRequestHeader(j, c[j]); return d instanceof XMLHttpRequest && void 0 !== a.withCredentials && (d.withCredentials = a.withCredentials), this._request = d, !0;
    }, a._clean = function () { clearTimeout(this._loadTimeout), this._request.removeEventListener != null ? (this._request.removeEventListener('loadstart', this._handleLoadStartProxy), this._request.removeEventListener('progress', this._handleProgressProxy), this._request.removeEventListener('abort', this._handleAbortProxy), this._request.removeEventListener('error', this._handleErrorProxy), this._request.removeEventListener('timeout', this._handleTimeoutProxy), this._request.removeEventListener('load', this._handleLoadProxy), this._request.removeEventListener('readystatechange', this._handleReadyStateChangeProxy)) : (this._request.onloadstart = null, this._request.onprogress = null, this._request.onabort = null, this._request.onerror = null, this._request.ontimeout = null, this._request.onload = null, this._request.onreadystatechange = null); }, a.toString = function () { return '[PreloadJS XHRRequest]'; }, createjs.XHRRequest = createjs.promote(XHRRequest, 'AbstractRequest');
}()), this.createjs = this.createjs || {}, (function () {
    function LoadQueue(a, b, c) {
    this.AbstractLoader_constructor(), this._plugins = [], this._typeCallbacks = {}, this._extensionCallbacks = {}, this.next = null, this.maintainScriptOrder = !0, this.stopOnError = !1, this._maxConnections = 1, this._availableLoaders = [createjs.ImageLoader, createjs.JavaScriptLoader, createjs.CSSLoader, createjs.JSONLoader, createjs.JSONPLoader, createjs.SoundLoader, createjs.ManifestLoader, createjs.SpriteSheetLoader, createjs.XMLLoader, createjs.SVGLoader, createjs.BinaryLoader, createjs.VideoLoader, createjs.TextLoader], this._defaultLoaderLength = this._availableLoaders.length, this.init(a, b, c);
  } let a = createjs.extend(LoadQueue, createjs.AbstractLoader),
      b = LoadQueue; a.init = function (a, b, c) { this.useXHR = !0, this.preferXHR = !0, this._preferXHR = !0, this.setPreferXHR(a), this._paused = !1, this._basePath = b, this._crossOrigin = c, this._loadStartWasDispatched = !1, this._currentlyLoadingScript = null, this._currentLoads = [], this._loadQueue = [], this._loadQueueBackup = [], this._loadItemsById = {}, this._loadItemsBySrc = {}, this._loadedResults = {}, this._loadedRawResults = {}, this._numItems = 0, this._numItemsLoaded = 0, this._scriptOrder = [], this._loadedScripts = [], this._lastProgress = 0 / 0; }, b.loadTimeout = 8e3, b.LOAD_TIMEOUT = 0, b.BINARY = createjs.AbstractLoader.BINARY, b.CSS = createjs.AbstractLoader.CSS, b.IMAGE = createjs.AbstractLoader.IMAGE, b.JAVASCRIPT = createjs.AbstractLoader.JAVASCRIPT, b.JSON = createjs.AbstractLoader.JSON, b.JSONP = createjs.AbstractLoader.JSONP, b.MANIFEST = createjs.AbstractLoader.MANIFEST, b.SOUND = createjs.AbstractLoader.SOUND, b.VIDEO = createjs.AbstractLoader.VIDEO, b.SVG = createjs.AbstractLoader.SVG, b.TEXT = createjs.AbstractLoader.TEXT, b.XML = createjs.AbstractLoader.XML, b.POST = createjs.AbstractLoader.POST, b.GET = createjs.AbstractLoader.GET, a.registerLoader = function (a) { if (!a || !a.canLoadItem) throw new Error('loader is of an incorrect type.'); if (this._availableLoaders.indexOf(a) != -1) throw new Error('loader already exists.'); this._availableLoaders.unshift(a); }, a.unregisterLoader = function (a) { const b = this._availableLoaders.indexOf(a); b != -1 && b < this._defaultLoaderLength - 1 && this._availableLoaders.splice(b, 1); }, a.setUseXHR = function (a) { return this.setPreferXHR(a); }, a.setPreferXHR = function (a) { return this.preferXHR = a != 0 && window.XMLHttpRequest != null, this.preferXHR; }, a.removeAll = function () { this.remove(); }, a.remove = function (a) {
      let b = null; if (a && !Array.isArray(a))b = [a]; else if (a)b = a; else if (arguments.length > 0) return; let c = !1; if (b) {
        for (;b.length;) {
          let d = b.pop(),
            e = this.getResult(d); for (f = this._loadQueue.length - 1; f >= 0; f--) if (g = this._loadQueue[f].getItem(), g.id == d || g.src == d) { this._loadQueue.splice(f, 1)[0].cancel(); break; } for (f = this._loadQueueBackup.length - 1; f >= 0; f--) if (g = this._loadQueueBackup[f].getItem(), g.id == d || g.src == d) { this._loadQueueBackup.splice(f, 1)[0].cancel(); break; } if (e) this._disposeItem(this.getItem(d)); else for (var f = this._currentLoads.length - 1; f >= 0; f--) { var g = this._currentLoads[f].getItem(); if (g.id == d || g.src == d) { this._currentLoads.splice(f, 1)[0].cancel(), c = !0; break; } }
        }c && this._loadNext();
      } else { this.close(); for (const h in this._loadItemsById) this._disposeItem(this._loadItemsById[h]); this.init(this.preferXHR, this._basePath); }
    }, a.reset = function () { this.close(); for (const a in this._loadItemsById) this._disposeItem(this._loadItemsById[a]); for (var b = [], c = 0, d = this._loadQueueBackup.length; d > c; c++)b.push(this._loadQueueBackup[c].getItem()); this.loadManifest(b, !1); }, a.installPlugin = function (a) { if (a != null && a.getPreloadHandlers != null) { this._plugins.push(a); const b = a.getPreloadHandlers(); if (b.scope = a, b.types != null) for (var c = 0, d = b.types.length; d > c; c++) this._typeCallbacks[b.types[c]] = b; if (b.extensions != null) for (c = 0, d = b.extensions.length; d > c; c++) this._extensionCallbacks[b.extensions[c]] = b; } }, a.setMaxConnections = function (a) { this._maxConnections = a, !this._paused && this._loadQueue.length > 0 && this._loadNext(); }, a.loadFile = function (a, b, c) { if (a == null) { const d = new createjs.ErrorEvent('PRELOAD_NO_FILE'); return void this._sendError(d); } this._addItem(a, null, c), this.setPaused(b !== !1 ? !1 : !0); }, a.loadManifest = function (a, c, d) {
      let e = null,
        f = null; if (Array.isArray(a)) { if (a.length == 0) { var g = new createjs.ErrorEvent('PRELOAD_MANIFEST_EMPTY'); return void this._sendError(g); }e = a; } else if (typeof a === 'string')e = [{ src: a, type: b.MANIFEST }]; else { if (typeof a !== 'object') { var g = new createjs.ErrorEvent('PRELOAD_MANIFEST_NULL'); return void this._sendError(g); } if (void 0 !== a.src) { if (a.type == null)a.type = b.MANIFEST; else if (a.type != b.MANIFEST) { var g = new createjs.ErrorEvent('PRELOAD_MANIFEST_TYPE'); this._sendError(g); }e = [a]; } else void 0 !== a.manifest && (e = a.manifest, f = a.path); } for (let h = 0, i = e.length; i > h; h++) this._addItem(e[h], f, d); this.setPaused(c !== !1 ? !1 : !0);
    }, a.load = function () { this.setPaused(!1); }, a.getItem = function (a) { return this._loadItemsById[a] || this._loadItemsBySrc[a]; }, a.getResult = function (a, b) { const c = this._loadItemsById[a] || this._loadItemsBySrc[a]; if (c == null) return null; const d = c.id; return b && this._loadedRawResults[d] ? this._loadedRawResults[d] : this._loadedResults[d]; }, a.getItems = function (a) {
      const b = []; for (const c in this._loadItemsById) {
        let d = this._loadItemsById[c],
         e = this.getResult(c); (a !== !0 || e != null) && b.push({ item: d, result: e, rawResult: this.getResult(c, !0) });
      } return b;
    }, a.setPaused = function (a) { this._paused = a, this._paused || this._loadNext(); }, a.close = function () { for (;this._currentLoads.length;) this._currentLoads.pop().cancel(); this._scriptOrder.length = 0, this._loadedScripts.length = 0, this.loadStartWasDispatched = !1, this._itemCount = 0, this._lastProgress = 0 / 0; }, a._addItem = function (a, b, c) { const d = this._createLoadItem(a, b, c); if (d != null) { const e = this._createLoader(d); e != null && ('plugins' in e && (e.plugins = this._plugins), d._loader = e, this._loadQueue.push(e), this._loadQueueBackup.push(e), this._numItems++, this._updateProgress(), (this.maintainScriptOrder && d.type == createjs.LoadQueue.JAVASCRIPT || d.maintainOrder === !0) && (this._scriptOrder.push(d), this._loadedScripts.push(null))); } }, a._createLoadItem = function (a, b, c) {
      const d = createjs.LoadItem.create(a); if (d == null) return null; let e = '',
       f = c || this._basePath; if (d.src instanceof Object) { if (!d.type) return null; if (b) { e = b; var g = createjs.RequestUtils.parseURI(b); f == null || g.absolute || g.relative || (e = f + e); } else f != null && (e = f); } else { var h = createjs.RequestUtils.parseURI(d.src); h.extension && (d.ext = h.extension), d.type == null && (d.type = createjs.RequestUtils.getTypeByExtension(d.ext)); var i = d.src; if (!h.absolute && !h.relative) if (b) { e = b; var g = createjs.RequestUtils.parseURI(b); i = b + i, f == null || g.absolute || g.relative || (e = f + e); } else f != null && (e = f); d.src = e + d.src; }d.path = e, (void 0 === d.id || d.id === null || d.id === '') && (d.id = i); const j = this._typeCallbacks[d.type] || this._extensionCallbacks[d.ext]; if (j) { const k = j.callback.call(j.scope, d, this); if (k === !1) return null; k === !0 || k != null && (d._loader = k), h = createjs.RequestUtils.parseURI(d.src), h.extension != null && (d.ext = h.extension); } return this._loadItemsById[d.id] = d, this._loadItemsBySrc[d.src] = d, d.crossOrigin == null && (d.crossOrigin = this._crossOrigin), d;
    }, a._createLoader = function (a) { if (a._loader != null) return a._loader; for (let b = this.preferXHR, c = 0; c < this._availableLoaders.length; c++) { const d = this._availableLoaders[c]; if (d && d.canLoadItem(a)) return new d(a, b); } return null; }, a._loadNext = function () { if (!this._paused) { this._loadStartWasDispatched || (this._sendLoadStart(), this._loadStartWasDispatched = !0), this._numItems == this._numItemsLoaded ? (this.loaded = !0, this._sendComplete(), this.next && this.next.load && this.next.load()) : this.loaded = !1; for (let a = 0; a < this._loadQueue.length && !(this._currentLoads.length >= this._maxConnections); a++) { const b = this._loadQueue[a]; this._canStartLoad(b) && (this._loadQueue.splice(a, 1), a--, this._loadItem(b)); } } }, a._loadItem = function (a) { a.on('fileload', this._handleFileLoad, this), a.on('progress', this._handleProgress, this), a.on('complete', this._handleFileComplete, this), a.on('error', this._handleError, this), a.on('fileerror', this._handleFileError, this), this._currentLoads.push(a), this._sendFileStart(a.getItem()), a.load(); }, a._handleFileLoad = function (a) { a.target = null, this.dispatchEvent(a); }, a._handleFileError = function (a) { const b = new createjs.ErrorEvent('FILE_LOAD_ERROR', null, a.item); this._sendError(b); }, a._handleError = function (a) { const b = a.target; this._numItemsLoaded++, this._finishOrderedItem(b, !0), this._updateProgress(); const c = new createjs.ErrorEvent('FILE_LOAD_ERROR', null, b.getItem()); this._sendError(c), this.stopOnError ? this.setPaused(!0) : (this._removeLoadItem(b), this._cleanLoadItem(b), this._loadNext()); }, a._handleFileComplete = function (a) {
     let b = a.target,
      c = b.getItem(),
      d = b.getResult(); this._loadedResults[c.id] = d; const e = b.getResult(!0); e != null && e !== d && (this._loadedRawResults[c.id] = e), this._saveLoadedItems(b), this._removeLoadItem(b), this._finishOrderedItem(b) || this._processFinishedLoad(c, b), this._cleanLoadItem(b);
   }, a._saveLoadedItems = function (a) { const b = a.getLoadedItems(); if (b !== null) for (let c = 0; c < b.length; c++) { const d = b[c].item; this._loadItemsBySrc[d.src] = d, this._loadItemsById[d.id] = d, this._loadedResults[d.id] = b[c].result, this._loadedRawResults[d.id] = b[c].rawResult; } }, a._finishOrderedItem = function (a, b) { const c = a.getItem(); if (this.maintainScriptOrder && c.type == createjs.LoadQueue.JAVASCRIPT || c.maintainOrder) { a instanceof createjs.JavaScriptLoader && (this._currentlyLoadingScript = !1); const d = createjs.indexOf(this._scriptOrder, c); return d == -1 ? !1 : (this._loadedScripts[d] = b === !0 ? !0 : c, this._checkScriptLoadOrder(), !0); } return !1; }, a._checkScriptLoadOrder = function () { for (let a = this._loadedScripts.length, b = 0; a > b; b++) { const c = this._loadedScripts[b]; if (c === null) break; if (c !== !0) { const d = this._loadedResults[c.id]; c.type == createjs.LoadQueue.JAVASCRIPT && createjs.DomUtils.appendToHead(d); const e = c._loader; this._processFinishedLoad(c, e), this._loadedScripts[b] = !0; } } }, a._processFinishedLoad = function (a, b) { if (this._numItemsLoaded++, !this.maintainScriptOrder && a.type == createjs.LoadQueue.JAVASCRIPT) { const c = b.getTag(); createjs.DomUtils.appendToHead(c); } this._updateProgress(), this._sendFileComplete(a, b), this._loadNext(); }, a._canStartLoad = function (a) { if (!this.maintainScriptOrder || a.preferXHR) return !0; const b = a.getItem(); if (b.type != createjs.LoadQueue.JAVASCRIPT) return !0; if (this._currentlyLoadingScript) return !1; for (let c = this._scriptOrder.indexOf(b), d = 0; c > d;) { const e = this._loadedScripts[d]; if (e == null) return !1; d++; } return this._currentlyLoadingScript = !0, !0; }, a._removeLoadItem = function (a) { for (let b = this._currentLoads.length, c = 0; b > c; c++) if (this._currentLoads[c] == a) { this._currentLoads.splice(c, 1); break; } }, a._cleanLoadItem = function (a) { const b = a.getItem(); b && delete b._loader; }, a._handleProgress = function (a) { const b = a.target; this._sendFileProgress(b.getItem(), b.progress), this._updateProgress(); }, a._updateProgress = function () {
    let a = this._numItemsLoaded / this._numItems,
      b = this._numItems - this._numItemsLoaded; if (b > 0) { for (var c = 0, d = 0, e = this._currentLoads.length; e > d; d++)c += this._currentLoads[d].progress; a += c / b * (b / this._numItems); } this._lastProgress != a && (this._sendProgress(a), this._lastProgress = a);
  }, a._disposeItem = function (a) { delete this._loadedResults[a.id], delete this._loadedRawResults[a.id], delete this._loadItemsById[a.id], delete this._loadItemsBySrc[a.src]; }, a._sendFileProgress = function (a, b) { if (!this._isCanceled() && !this._paused && this.hasEventListener('fileprogress')) { const c = new createjs.Event('fileprogress'); c.progress = b, c.loaded = b, c.total = 1, c.item = a, this.dispatchEvent(c); } }, a._sendFileComplete = function (a, b) { if (!this._isCanceled() && !this._paused) { const c = new createjs.Event('fileload'); c.loader = b, c.item = a, c.result = this._loadedResults[a.id], c.rawResult = this._loadedRawResults[a.id], a.completeHandler && a.completeHandler(c), this.hasEventListener('fileload') && this.dispatchEvent(c); } }, a._sendFileStart = function (a) { const b = new createjs.Event('filestart'); b.item = a, this.hasEventListener('filestart') && this.dispatchEvent(b); }, a.toString = function () { return '[PreloadJS LoadQueue]'; }, createjs.LoadQueue = createjs.promote(LoadQueue, 'AbstractLoader');
  }()), this.createjs = this.createjs || {}, (function () {
  function TextLoader(a) { this.AbstractLoader_constructor(a, !0, createjs.AbstractLoader.TEXT); } const a = (createjs.extend(TextLoader, createjs.AbstractLoader), TextLoader); a.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.TEXT; }, createjs.TextLoader = createjs.promote(TextLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
    function BinaryLoader(a) { this.AbstractLoader_constructor(a, !0, createjs.AbstractLoader.BINARY), this.on('initialize', this._updateXHR, this); } let a = createjs.extend(BinaryLoader, createjs.AbstractLoader),
    b = BinaryLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.BINARY; }, a._updateXHR = function (a) { a.loader.setResponseType('arraybuffer'); }, createjs.BinaryLoader = createjs.promote(BinaryLoader, 'AbstractLoader');
  }()), this.createjs = this.createjs || {}, (function () {
  function CSSLoader(a, b) { this.AbstractLoader_constructor(a, b, createjs.AbstractLoader.CSS), this.resultFormatter = this._formatResult, this._tagSrcAttribute = 'href', this._tag = document.createElement(b ? 'style' : 'link'), this._tag.rel = 'stylesheet', this._tag.type = 'text/css'; } let a = createjs.extend(CSSLoader, createjs.AbstractLoader),
    b = CSSLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.CSS; }, a._formatResult = function (a) { if (this._preferXHR) { var b = a.getTag(); if (b.styleSheet)b.styleSheet.cssText = a.getResult(!0); else { const c = document.createTextNode(a.getResult(!0)); b.appendChild(c); } } else b = this._tag; return createjs.DomUtils.appendToHead(b), b; }, createjs.CSSLoader = createjs.promote(CSSLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function ImageLoader(a, b) { this.AbstractLoader_constructor(a, b, createjs.AbstractLoader.IMAGE), this.resultFormatter = this._formatResult, this._tagSrcAttribute = 'src', createjs.RequestUtils.isImageTag(a) ? this._tag = a : createjs.RequestUtils.isImageTag(a.src) ? this._tag = a.src : createjs.RequestUtils.isImageTag(a.tag) && (this._tag = a.tag), this._tag != null ? this._preferXHR = !1 : this._tag = document.createElement('img'), this.on('initialize', this._updateXHR, this); } let a = createjs.extend(ImageLoader, createjs.AbstractLoader),
    b = ImageLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.IMAGE; }, a.load = function () { if (this._tag.src != '' && this._tag.complete) return void this._sendComplete(); let a = this._item.crossOrigin; a == 1 && (a = 'Anonymous'), a == null || createjs.RequestUtils.isLocal(this._item.src) || (this._tag.crossOrigin = a), this.AbstractLoader_load(); }, a._updateXHR = function (a) { a.loader.mimeType = 'text/plain; charset=x-user-defined-binary', a.loader.setResponseType && a.loader.setResponseType('blob'); }, a._formatResult = function () { return this._formatImage; }, a._formatImage = function (a, b) {
      let c = this._tag,
        d = window.URL || window.webkitURL; if (this._preferXHR) if (d) { const e = d.createObjectURL(this.getResult(!0)); c.src = e, c.addEventListener('load', this._cleanUpURL, !1), c.addEventListener('error', this._cleanUpURL, !1); } else c.src = this._item.src; else;c.complete ? a(c) : (c.onload = createjs.proxy(function () { a(this._tag); }, this), c.onerror = createjs.proxy(() => { b(_this._tag); }, this));
    }, a._cleanUpURL = function (a) { const b = window.URL || window.webkitURL; b.revokeObjectURL(a.target.src); }, createjs.ImageLoader = createjs.promote(ImageLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function JavaScriptLoader(a, b) { this.AbstractLoader_constructor(a, b, createjs.AbstractLoader.JAVASCRIPT), this.resultFormatter = this._formatResult, this._tagSrcAttribute = 'src', this.setTag(document.createElement('script')); } let a = createjs.extend(JavaScriptLoader, createjs.AbstractLoader),
    b = JavaScriptLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.JAVASCRIPT; }, a._formatResult = function (a) { const b = a.getTag(); return this._preferXHR && (b.text = a.getResult(!0)), b; }, createjs.JavaScriptLoader = createjs.promote(JavaScriptLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function JSONLoader(a) { this.AbstractLoader_constructor(a, !0, createjs.AbstractLoader.JSON), this.resultFormatter = this._formatResult; } let a = createjs.extend(JSONLoader, createjs.AbstractLoader),
    b = JSONLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.JSON; }, a._formatResult = function (a) { let b = null; try { b = createjs.DataUtils.parseJSON(a.getResult(!0)); } catch (c) { const d = new createjs.ErrorEvent('JSON_FORMAT', null, c); return this._sendError(d), c; } return b; }, createjs.JSONLoader = createjs.promote(JSONLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function JSONPLoader(a) { this.AbstractLoader_constructor(a, !1, createjs.AbstractLoader.JSONP), this.setTag(document.createElement('script')), this.getTag().type = 'text/javascript'; } let a = createjs.extend(JSONPLoader, createjs.AbstractLoader),
    b = JSONPLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.JSONP; }, a.cancel = function () { this.AbstractLoader_cancel(), this._dispose(); }, a.load = function () { if (this._item.callback == null) throw new Error('callback is required for loading JSONP requests.'); if (window[this._item.callback] != null) throw new Error(`JSONP callback '${this._item.callback}' already exists on window. You need to specify a different callback or re-name the current one.`); window[this._item.callback] = createjs.proxy(this._handleLoad, this), window.document.body.appendChild(this._tag), this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), this._item.loadTimeout), this._tag.src = this._item.src; }, a._handleLoad = function (a) { this._result = this._rawResult = a, this._sendComplete(), this._dispose(); }, a._handleTimeout = function () { this._dispose(), this.dispatchEvent(new createjs.ErrorEvent('timeout')); }, a._dispose = function () { window.document.body.removeChild(this._tag), delete window[this._item.callback], clearTimeout(this._loadTimeout); }, createjs.JSONPLoader = createjs.promote(JSONPLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function ManifestLoader(a) { this.AbstractLoader_constructor(a, null, createjs.AbstractLoader.MANIFEST), this.plugins = null, this._manifestQueue = null; } let a = createjs.extend(ManifestLoader, createjs.AbstractLoader),
    b = ManifestLoader; b.MANIFEST_PROGRESS = 0.25, b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.MANIFEST; }, a.load = function () { this.AbstractLoader_load(); }, a._createRequest = function () { const a = this._item.callback; this._request = a != null ? new createjs.JSONPLoader(this._item) : new createjs.JSONLoader(this._item); }, a.handleEvent = function (a) { switch (a.type) { case 'complete':return this._rawResult = a.target.getResult(!0), this._result = a.target.getResult(), this._sendProgress(b.MANIFEST_PROGRESS), void this._loadManifest(this._result); case 'progress':return a.loaded *= b.MANIFEST_PROGRESS, this.progress = a.loaded / a.total, (isNaN(this.progress) || 1 / 0 == this.progress) && (this.progress = 0), void this._sendProgress(a); } this.AbstractLoader_handleEvent(a); }, a.destroy = function () { this.AbstractLoader_destroy(), this._manifestQueue.close(); }, a._loadManifest = function (a) { if (a && a.manifest) { const b = this._manifestQueue = new createjs.LoadQueue(); b.on('fileload', this._handleManifestFileLoad, this), b.on('progress', this._handleManifestProgress, this), b.on('complete', this._handleManifestComplete, this, !0), b.on('error', this._handleManifestError, this, !0); for (let c = 0, d = this.plugins.length; d > c; c++)b.installPlugin(this.plugins[c]); b.loadManifest(a); } else this._sendComplete(); }, a._handleManifestFileLoad = function (a) { a.target = null, this.dispatchEvent(a); }, a._handleManifestComplete = function () { this._loadedItems = this._manifestQueue.getItems(!0), this._sendComplete(); }, a._handleManifestProgress = function (a) { this.progress = a.progress * (1 - b.MANIFEST_PROGRESS) + b.MANIFEST_PROGRESS, this._sendProgress(this.progress); }, a._handleManifestError = function (a) { const b = new createjs.Event('fileerror'); b.item = a.data, this.dispatchEvent(b); }, createjs.ManifestLoader = createjs.promote(ManifestLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function SoundLoader(a, b) { this.AbstractMediaLoader_constructor(a, b, createjs.AbstractLoader.SOUND), createjs.RequestUtils.isAudioTag(a) ? this._tag = a : createjs.RequestUtils.isAudioTag(a.src) ? this._tag = a : createjs.RequestUtils.isAudioTag(a.tag) && (this._tag = createjs.RequestUtils.isAudioTag(a) ? a : a.src), this._tag != null && (this._preferXHR = !1); } let a = createjs.extend(SoundLoader, createjs.AbstractMediaLoader),
    b = SoundLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.SOUND; }, a._createTag = function (a) { const b = document.createElement('audio'); return b.autoplay = !1, b.preload = 'none', b.src = a, b; }, createjs.SoundLoader = createjs.promote(SoundLoader, 'AbstractMediaLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function VideoLoader(a, b) { this.AbstractMediaLoader_constructor(a, b, createjs.AbstractLoader.VIDEO), createjs.RequestUtils.isVideoTag(a) || createjs.RequestUtils.isVideoTag(a.src) ? (this.setTag(createjs.RequestUtils.isVideoTag(a) ? a : a.src), this._preferXHR = !1) : this.setTag(this._createTag()); } let a = createjs.extend(VideoLoader, createjs.AbstractMediaLoader),
    b = VideoLoader; a._createTag = function () { return document.createElement('video'); }, b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.VIDEO; }, createjs.VideoLoader = createjs.promote(VideoLoader, 'AbstractMediaLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function SpriteSheetLoader(a, b) { this.AbstractLoader_constructor(a, b, createjs.AbstractLoader.SPRITESHEET), this._manifestQueue = null; } let a = createjs.extend(SpriteSheetLoader, createjs.AbstractLoader),
    b = SpriteSheetLoader; b.SPRITESHEET_PROGRESS = 0.25, b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.SPRITESHEET; }, a.destroy = function () { this.AbstractLoader_destroy, this._manifestQueue.close(); }, a._createRequest = function () { const a = this._item.callback; this._request = a != null ? new createjs.JSONPLoader(this._item) : new createjs.JSONLoader(this._item); }, a.handleEvent = function (a) { switch (a.type) { case 'complete':return this._rawResult = a.target.getResult(!0), this._result = a.target.getResult(), this._sendProgress(b.SPRITESHEET_PROGRESS), void this._loadManifest(this._result); case 'progress':return a.loaded *= b.SPRITESHEET_PROGRESS, this.progress = a.loaded / a.total, (isNaN(this.progress) || 1 / 0 == this.progress) && (this.progress = 0), void this._sendProgress(a); } this.AbstractLoader_handleEvent(a); }, a._loadManifest = function (a) { if (a && a.images) { const b = this._manifestQueue = new createjs.LoadQueue(this._preferXHR, this._item.path, this._item.crossOrigin); b.on('complete', this._handleManifestComplete, this, !0), b.on('fileload', this._handleManifestFileLoad, this), b.on('progress', this._handleManifestProgress, this), b.on('error', this._handleManifestError, this, !0), b.loadManifest(a.images); } }, a._handleManifestFileLoad = function (a) {
      const b = a.result; if (b != null) {
        let c = this.getResult().images,
            d = c.indexOf(a.item.src); c[d] = b;
      }
    }, a._handleManifestComplete = function () { this._result = new createjs.SpriteSheet(this._result), this._loadedItems = this._manifestQueue.getItems(!0), this._sendComplete(); }, a._handleManifestProgress = function (a) { this.progress = a.progress * (1 - b.SPRITESHEET_PROGRESS) + b.SPRITESHEET_PROGRESS, this._sendProgress(this.progress); }, a._handleManifestError = function (a) { const b = new createjs.Event('fileerror'); b.item = a.data, this.dispatchEvent(b); }, createjs.SpriteSheetLoader = createjs.promote(SpriteSheetLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function SVGLoader(a, b) { this.AbstractLoader_constructor(a, b, createjs.AbstractLoader.SVG), this.resultFormatter = this._formatResult, this._tagSrcAttribute = 'data', b ? this.setTag(document.createElement('svg')) : (this.setTag(document.createElement('object')), this.getTag().type = 'image/svg+xml'); } let a = createjs.extend(SVGLoader, createjs.AbstractLoader),
    b = SVGLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.SVG; }, a._formatResult = function (a) {
      let b = createjs.DataUtils.parseXML(a.getResult(!0), 'text/xml'),
          c = a.getTag(); return !this._preferXHR && document.body.contains(c) && document.body.removeChild(c), b.documentElement != null ? (c.appendChild(b.documentElement), c.style.visibility = 'visible', c) : b;
    }, createjs.SVGLoader = createjs.promote(SVGLoader, 'AbstractLoader');
}()), this.createjs = this.createjs || {}, (function () {
  function XMLLoader(a) { this.AbstractLoader_constructor(a, !0, createjs.AbstractLoader.XML), this.resultFormatter = this._formatResult; } let a = createjs.extend(XMLLoader, createjs.AbstractLoader),
    b = XMLLoader; b.canLoadItem = function (a) { return a.type == createjs.AbstractLoader.XML; }, a._formatResult = function (a) { return createjs.DataUtils.parseXML(a.getResult(!0), 'text/xml'); }, createjs.XMLLoader = createjs.promote(XMLLoader, 'AbstractLoader');
}());
